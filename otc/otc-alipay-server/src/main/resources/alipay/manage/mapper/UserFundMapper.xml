<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="alipay.manage.mapper.UserFundMapper" >
  <resultMap id="BaseResultMap" type="alipay.manage.bean.UserFund" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="cashBalance" property="cashBalance" jdbcType="DECIMAL" />
    <result column="rechargeNumber" property="rechargeNumber" jdbcType="DECIMAL" />
    <result column="freezeBalance" property="freezeBalance" jdbcType="DECIMAL" />
    <result column="accountBalance" property="accountBalance" jdbcType="DECIMAL" />
    <result column="sumDealAmount" property="sumDealAmount" jdbcType="DECIMAL" />
    <result column="quota" property="quota" jdbcType="DECIMAL"/>
    <result column="sumRechargeAmount" property="sumRechargeAmount" jdbcType="DECIMAL" />
    <result column="sumProfit" property="sumProfit" jdbcType="DECIMAL" />
    <result column="sumAgentProfit" property="sumAgentProfit" jdbcType="DECIMAL" />
    <result column="sumOrderCount" property="sumOrderCount" jdbcType="INTEGER" />
    <result column="todayDealAmount" property="todayDealAmount" jdbcType="DECIMAL" />
    <result column="todayProfit" property="todayProfit" jdbcType="DECIMAL" />
      <result column="todayOrderCount" property="todayOrderCount" jdbcType="INTEGER"/>
      <result column="todayAgentProfit" property="todayAgentProfit" jdbcType="DECIMAL"/>
      <result column="userType" property="userType" jdbcType="CHAR"/>
      <result column="agent" property="agent" jdbcType="VARCHAR"/>
      <result column="isAgent" property="isAgent" jdbcType="CHAR"/>
      <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP"/>
      <result column="status" property="status" jdbcType="INTEGER"/>
      <result column="version" property="version" jdbcType="INTEGER"/>
      <result column="currency" property="currency" jdbcType="VARCHAR"/>
      <result column="sumOtherWitAmount" property="sumOtherWitAmount" jdbcType="DECIMAL"/>
      <result column="todayWitAmount" property="todayWitAmount" jdbcType="DECIMAL"/>
      <result column="sumWitAmount" property="sumWitAmount" jdbcType="DECIMAL"/>
      <result column="todayOtherWitAmount" property="todayOtherWitAmount" jdbcType="DECIMAL"/>


  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, userName, cashBalance, rechargeNumber, freezeBalance, accountBalance, 
    sumDealAmount, sumRechargeAmount, sumProfit, sumAgentProfit, sumOrderCount, todayDealAmount, 
    todayProfit, todayOrderCount, todayAgentProfit, userType, agent, isAgent, createTime, 
    submitTime, status, version ,quota,currency,sumOtherWitAmount,todayWitAmount,sumWitAmount,todayOtherWitAmount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="alipay.manage.bean.UserFundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from alipay_user_fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from alipay_user_fund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from alipay_user_fund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="alipay.manage.bean.UserFundExample" >
    delete from alipay_user_fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="alipay.manage.bean.UserFund" useGeneratedKeys="true" keyProperty="id" >
    insert into alipay_user_fund (userId, userName, cashBalance, 
      rechargeNumber, freezeBalance, accountBalance, 
      sumDealAmount, sumRechargeAmount, sumProfit, 
      sumAgentProfit, sumOrderCount, todayDealAmount, 
      todayProfit, todayOrderCount, todayAgentProfit, 
      userType, agent, isAgent, 
      createTime, submitTime, status, 
      version,quota)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{cashBalance,jdbcType=DECIMAL}, 
      #{rechargeNumber,jdbcType=DECIMAL}, #{freezeBalance,jdbcType=DECIMAL}, #{accountBalance,jdbcType=DECIMAL}, 
      #{sumDealAmount,jdbcType=DECIMAL}, #{sumRechargeAmount,jdbcType=DECIMAL}, #{sumProfit,jdbcType=DECIMAL}, 
      #{sumAgentProfit,jdbcType=DECIMAL}, #{sumOrderCount,jdbcType=INTEGER}, #{todayDealAmount,jdbcType=DECIMAL}, 
      #{todayProfit,jdbcType=DECIMAL}, #{todayOrderCount,jdbcType=INTEGER}, #{todayAgentProfit,jdbcType=DECIMAL}, 
      #{userType,jdbcType=CHAR}, #{agent,jdbcType=VARCHAR}, #{isAgent,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{submitTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER},#{quota})
  </insert>
  <insert id="insertSelective" parameterType="alipay.manage.bean.UserFund" useGeneratedKeys="true" keyProperty="id" >
    insert into alipay_user_fund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="cashBalance != null" >
          cashBalance,
      </if>
        <if test="rechargeNumber != null">
            rechargeNumber,
        </if>
        <if test="freezeBalance != null">
            freezeBalance,
        </if>
        <if test="accountBalance != null">
            accountBalance,
        </if>
        <if test="quota != null">
            quota,
        </if>
        <if test="sumDealAmount != null">
            sumDealAmount,
        </if>
        <if test="sumRechargeAmount != null">
            sumRechargeAmount,
        </if>
        <if test="sumProfit != null">
            sumProfit,
        </if>
      <if test="sumAgentProfit != null" >
        sumAgentProfit,
      </if>
      <if test="sumOrderCount != null" >
        sumOrderCount,
      </if>
      <if test="todayDealAmount != null" >
        todayDealAmount,
      </if>
      <if test="todayProfit != null" >
        todayProfit,
      </if>
      <if test="todayOrderCount != null" >
        todayOrderCount,
      </if>
      <if test="todayAgentProfit != null" >
        todayAgentProfit,
      </if>
      <if test="userType != null" >
        userType,
      </if>
      <if test="agent != null" >
        agent,
      </if>
      <if test="isAgent != null" >
        isAgent,
      </if>
      <if test="createTime != null" >
          createTime,
      </if>
        <if test="submitTime != null">
            submitTime,
        </if>
        <if test="status != null">
            status,
        </if>
        <if test="version != null">
            version,
        </if>
        <if test="sumOtherWitAmount != null">
            sumOtherWitAmount,
        </if>
        <if test="todayWitAmount != null">
            todayWitAmount,
        </if>
        <if test="sumWitAmount != null">
            sumWitAmount,
        </if>
        <if test="todayOtherWitAmount != null">
            todayOtherWitAmount,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cashBalance != null" >
          #{cashBalance,jdbcType=DECIMAL},
      </if>
        <if test="rechargeNumber != null">
            #{rechargeNumber,jdbcType=DECIMAL},
        </if>
        <if test="freezeBalance != null">
            #{freezeBalance,jdbcType=DECIMAL},
        </if>
        <if test="accountBalance != null">
            #{accountBalance,jdbcType=DECIMAL},
        </if>
        <if test="quota != null">
            #{quota,jdbcType=DECIMAL},
        </if>
        <if test="sumDealAmount != null">
            #{sumDealAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumRechargeAmount != null">
            #{sumRechargeAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumProfit != null">
            #{sumProfit,jdbcType=DECIMAL},
        </if>
      <if test="sumAgentProfit != null" >
        #{sumAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="sumOrderCount != null" >
        #{sumOrderCount,jdbcType=INTEGER},
      </if>
      <if test="todayDealAmount != null" >
        #{todayDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="todayProfit != null" >
        #{todayProfit,jdbcType=DECIMAL},
      </if>
      <if test="todayOrderCount != null" >
        #{todayOrderCount,jdbcType=INTEGER},
      </if>
      <if test="todayAgentProfit != null" >
        #{todayAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=CHAR},
      </if>
      <if test="agent != null" >
        #{agent,jdbcType=VARCHAR},
      </if>
      <if test="isAgent != null" >
        #{isAgent,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
          #{createTime,jdbcType=TIMESTAMP},
      </if>
        <if test="submitTime != null">
            #{submitTime,jdbcType=TIMESTAMP},
        </if>
        <if test="status != null">
            #{status,jdbcType=INTEGER},
        </if>
        <if test="version != null">
            #{version,jdbcType=INTEGER},
        </if>
        <if test="sumOtherWitAmount != null">
            #{sumOtherWitAmount},
        </if>
        <if test="todayWitAmount != null">
            #{todayWitAmount},
        </if>
        <if test="sumWitAmount != null">
            #{sumWitAmount},
        </if>
        <if test="todayOtherWitAmount != null">
            #{todayOtherWitAmount},
        </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="alipay.manage.bean.UserFundExample" resultType="java.lang.Integer" >
    select count(*) from alipay_user_fund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
      update alipay_user_fund
      <set >
      version = version+1,
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.cashBalance != null" >
          cashBalance = #{record.cashBalance,jdbcType=DECIMAL},
      </if>
        <if test="record.rechargeNumber != null">
            rechargeNumber = #{record.rechargeNumber,jdbcType=DECIMAL},
        </if>
          <if test="record.freezeBalance != null">
              freezeBalance = #{record.freezeBalance,jdbcType=DECIMAL},
          </if>
          <if test="record.accountBalance != null">
              accountBalance = #{record.accountBalance,jdbcType=DECIMAL},
          </if>
          <if test="record.quota != null">
              quota = #{record.quota,jdbcType=DECIMAL},
          </if>
          <if test="record.sumOtherWitAmount != null">
              sumOtherWitAmount = #{record.sumOtherWitAmount,jdbcType=DECIMAL},
          </if>
          <if test="record.todayWitAmount != null">
              todayWitAmount = #{record.todayWitAmount,jdbcType=DECIMAL},
          </if>
          <if test="record.sumWitAmount != null">
              sumWitAmount = #{record.sumWitAmount,jdbcType=DECIMAL},
          </if>
          <if test="record.todayOtherWitAmount != null">
              todayOtherWitAmount = #{record.todayOtherWitAmount,jdbcType=DECIMAL},
          </if>

          <if test="record.sumDealAmount != null">
              sumDealAmount = #{record.sumDealAmount,jdbcType=DECIMAL},
          </if>
          <if test="record.sumRechargeAmount != null">
              sumRechargeAmount = #{record.sumRechargeAmount,jdbcType=DECIMAL},
          </if>
          <if test="record.sumProfit != null">
              sumProfit = #{record.sumProfit,jdbcType=DECIMAL},
          </if>
      <if test="record.sumAgentProfit != null" >
        sumAgentProfit = #{record.sumAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.sumOrderCount != null" >
        sumOrderCount = #{record.sumOrderCount,jdbcType=INTEGER},
      </if>
      <if test="record.todayDealAmount != null" >
        todayDealAmount = #{record.todayDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.todayProfit != null" >
        todayProfit = #{record.todayProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.todayOrderCount != null" >
        todayOrderCount = #{record.todayOrderCount,jdbcType=INTEGER},
      </if>
      <if test="record.todayAgentProfit != null" >
        todayAgentProfit = #{record.todayAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.userType != null" >
        userType = #{record.userType,jdbcType=CHAR},
      </if>
      <if test="record.agent != null" >
        agent = #{record.agent,jdbcType=VARCHAR},
      </if>
      <if test="record.isAgent != null" >
        isAgent = #{record.isAgent,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitTime != null" >
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
      update alipay_user_fund
      set id = #{record.id,jdbcType=INTEGER},
      version = version+1,
      userName = #{record.userName,jdbcType=VARCHAR},
      cashBalance = #{record.cashBalance,jdbcType=DECIMAL},
      rechargeNumber = #{record.rechargeNumber,jdbcType=DECIMAL},
      freezeBalance = #{record.freezeBalance,jdbcType=DECIMAL},
      accountBalance = #{record.accountBalance,jdbcType=DECIMAL},
      quota = #{record.quota,jdbcType=DECIMAL},
      sumDealAmount = #{record.sumDealAmount,jdbcType=DECIMAL},
      sumRechargeAmount = #{record.sumRechargeAmount,jdbcType=DECIMAL},
      sumProfit = #{record.sumProfit,jdbcType=DECIMAL},
      sumOtherWitAmount = #{record.sumOtherWitAmount,jdbcType=DECIMAL},
      todayOtherWitAmount = #{record.todayOtherWitAmount,jdbcType=DECIMAL},
      todayWitAmount = #{record.todayWitAmount,jdbcType=DECIMAL},
      sumWitAmount = #{record.sumWitAmount,jdbcType=DECIMAL},
      sumAgentProfit = #{record.sumAgentProfit,jdbcType=DECIMAL},
      sumOrderCount = #{record.sumOrderCount,jdbcType=INTEGER},
      todayDealAmount = #{record.todayDealAmount,jdbcType=DECIMAL},
      todayProfit = #{record.todayProfit,jdbcType=DECIMAL},
      todayOrderCount = #{record.todayOrderCount,jdbcType=INTEGER},
      todayAgentProfit = #{record.todayAgentProfit,jdbcType=DECIMAL},
      userType = #{record.userType,jdbcType=CHAR},
      agent = #{record.agent,jdbcType=VARCHAR},
      isAgent = #{record.isAgent,jdbcType=CHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}  
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="alipay.manage.bean.UserFund" >
    update alipay_user_fund
    <set >
     version = version+1,
      <if test="userName != null" >
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="cashBalance != null" >
        cashBalance = #{cashBalance,jdbcType=DECIMAL},
      </if>
        <if test="rechargeNumber != null">
            rechargeNumber = #{rechargeNumber,jdbcType=DECIMAL},
        </if>
        <if test="freezeBalance != null">
            freezeBalance = #{freezeBalance,jdbcType=DECIMAL},
        </if>
        <if test="accountBalance != null">
            accountBalance = #{accountBalance,jdbcType=DECIMAL},
        </if>
        <if test="sumOtherWitAmount != null">
            sumOtherWitAmount = #{sumOtherWitAmount,jdbcType=DECIMAL},
        </if>
        <if test="todayOtherWitAmount != null">
            todayOtherWitAmount = #{todayOtherWitAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumWitAmount != null">
            sumWitAmount = #{sumWitAmount,jdbcType=DECIMAL},
        </if>
        <if test="quota != null">
            quota = #{quota,jdbcType=DECIMAL},
        </if>
        <if test="todayWitAmount != null">
            todayWitAmount = #{todayWitAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumDealAmount != null">
            sumDealAmount = #{sumDealAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumRechargeAmount != null">
            sumRechargeAmount = #{sumRechargeAmount,jdbcType=DECIMAL},
        </if>
        <if test="sumProfit != null">
            sumProfit = #{sumProfit,jdbcType=DECIMAL},
        </if>
        <if test="sumAgentProfit != null">
        sumAgentProfit = #{sumAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="sumOrderCount != null" >
        sumOrderCount = #{sumOrderCount,jdbcType=INTEGER},
      </if>
      <if test="todayDealAmount != null" >
        todayDealAmount = #{todayDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="todayProfit != null" >
        todayProfit = #{todayProfit,jdbcType=DECIMAL},
      </if>
      <if test="todayOrderCount != null" >
        todayOrderCount = #{todayOrderCount,jdbcType=INTEGER},
      </if>
      <if test="todayAgentProfit != null" >
        todayAgentProfit = #{todayAgentProfit,jdbcType=DECIMAL},
      </if>
      <if test="userType != null" >
        userType = #{userType,jdbcType=CHAR},
      </if>
      <if test="agent != null" >
        agent = #{agent,jdbcType=VARCHAR},
      </if>
      <if test="isAgent != null" >
        isAgent = #{isAgent,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="alipay.manage.bean.UserFund" >
    update alipay_user_fund
    set
     version = version+1,
      userName = #{userName,jdbcType=VARCHAR},
      cashBalance = #{cashBalance,jdbcType=DECIMAL},
      rechargeNumber = #{rechargeNumber,jdbcType=DECIMAL},
      freezeBalance = #{freezeBalance,jdbcType=DECIMAL},
      accountBalance = #{accountBalance,jdbcType=DECIMAL},
      quota = #{quota,jdbcType=DECIMAL},
      sumDealAmount = #{sumDealAmount,jdbcType=DECIMAL},
      sumRechargeAmount = #{sumRechargeAmount,jdbcType=DECIMAL},
      sumProfit = #{sumProfit,jdbcType=DECIMAL},
      sumAgentProfit = #{sumAgentProfit,jdbcType=DECIMAL},
      sumOrderCount = #{sumOrderCount,jdbcType=INTEGER},
      todayDealAmount = #{todayDealAmount,jdbcType=DECIMAL},
      todayProfit = #{todayProfit,jdbcType=DECIMAL},
      sumOtherWitAmount = #{sumOtherWitAmount,jdbcType=DECIMAL},
      todayOtherWitAmount = #{todayOtherWitAmount,jdbcType=DECIMAL},
      todayWitAmount = #{todayWitAmount,jdbcType=DECIMAL},
      todayOrderCount = #{todayOrderCount,jdbcType=INTEGER},
      todayAgentProfit = #{todayAgentProfit,jdbcType=DECIMAL},
      userType = #{userType,jdbcType=CHAR},
      agent = #{agent,jdbcType=VARCHAR},
      isAgent = #{isAgent,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
  </update>
    <select id="findUserByWeight" resultType="alipay.manage.bean.UserFund">
        select * from alipay_user_fund
        where userId in
        (select userId from
        alipay_user_info where `switchs` = 1
        and receiveOrderState = 1
        and userId in
        <foreach collection="asList" item="list" open="(" separator="," close=")">
            #{list}
        </foreach>
        )
    </select>
</mapper>